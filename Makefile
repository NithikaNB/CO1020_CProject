# Compiler and flags
CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -Iinclude -O2
LDFLAGS = -lm

# Directories
SRCDIR = src
INCDIR = include
DEMODIR = demo
TESTDIR = tests
BUILDDIR = frames

# Source files
COMMON_SRC = $(SRCDIR)/canvas.c
DEMO_SRC = $(COMMON_SRC) $(SRCDIR)/math3d.c $(SRCDIR)/renderer.c $(DEMODIR)/main.c
TEST_SRC = $(COMMON_SRC) $(SRCDIR)/math3d.c $(TESTDIR)/test_math.c

# Targets
DEMO_TARGET = demo.exe
TEST_TARGET = test_math.exe
DEMO_MP4_OUTPUT = soccer_ball_wireframe.mp4
TEST_MP4_OUTPUT = test_math_wireframe.mp4

# Default build
all: $(DEMO_TARGET) $(TEST_TARGET)

# Build demo
$(DEMO_TARGET): $(DEMO_SRC)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# Build test
$(TEST_TARGET): $(TEST_SRC)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# Run demo and generate video
run-demo: $(DEMO_TARGET)
	@if not exist $(BUILDDIR) mkdir $(BUILDDIR)
	./$(DEMO_TARGET)
	@if exist $(BUILDDIR)\frame_*.pgm (ffmpeg -framerate 60 -i $(BUILDDIR)/frame_%%03d.pgm -c:v libx264 -pix_fmt yuv420p -crf 18 -preset slow $(DEMO_MP4_OUTPUT)) else (echo No frames generated by demo)

# Run test and generate video
run-test: $(TEST_TARGET)
	@if not exist $(BUILDDIR) mkdir $(BUILDDIR)
	./$(TEST_TARGET)
	@if exist $(BUILDDIR)\frame_*.pgm (ffmpeg -framerate 60 -i $(BUILDDIR)/frame_%%03d.pgm -pix_fmt yuv420p -c:v libx264 -crf 18 -preset slow $(TEST_MP4_OUTPUT)) else (echo No frames generated by test)

# Debug build
debug: CFLAGS += -DDEBUG -g
debug: clean all

# Release build
release: CFLAGS += -O3 -DNDEBUG
release: clean all

# Clean build artifacts
clean:
	@echo Cleaning...
	@if exist *.exe del /q *.exe
	@if exist *.pgm del /q *.pgm
	@if exist $(DEMO_MP4_OUTPUT) del /q $(DEMO_MP4_OUTPUT)
	@if exist $(TEST_MP4_OUTPUT) del /q $(TEST_MP4_OUTPUT)
	@if exist $(FRAMEDIR)\*.pgm del /q $(FRAMEDIR)\*.pgm
	@if exist $(BUILDDIR)\*.pgm del /q $(BUILDDIR)\*.pgm
	@echo Clean complete.

# Debug: check what files are generated
check-frames:
	@echo "Checking frames directory..."
	@if exist $(FRAMEDIR) (dir $(FRAMEDIR)\*.pgm) else (echo Frames directory does not exist)

check-build:
	@echo "Checking build directory..."
	@if exist $(BUILDDIR) (dir $(BUILDDIR)\*.pgm) else (echo Build directory does not exist)

# Debug: run test without video generation
test-only: $(TEST_TARGET)
	@if not exist $(BUILDDIR) mkdir $(BUILDDIR)
	./$(TEST_TARGET)
	@echo "Test completed. Checking for generated files:"
	@if exist $(BUILDDIR) (dir $(BUILDDIR)\*.pgm) else (echo No PGM files found)

# Debug: run demo without video generation  
demo-only: $(DEMO_TARGET)
	@if not exist $(FRAMEDIR) mkdir $(FRAMEDIR)
	./$(DEMO_TARGET)
	@echo "Demo completed. Checking for generated files:"
	@if exist $(FRAMEDIR) (dir $(FRAMEDIR)\*.pgm) else (echo No PGM files found)
help:
	@echo "Available targets:"
	@echo "  all          - Build demo and test"
	@echo "  run-demo     - Run the demo and generate $(DEMO_MP4_OUTPUT) (uses frames/ directory)"
	@echo "  run-test     - Run test and generate $(TEST_MP4_OUTPUT) (uses build/ directory)"
	@echo "  demo-only    - Run demo without video generation (debug)"
	@echo "  test-only    - Run test without video generation (debug)"
	@echo "  check-frames - Check what frame files exist in frames/ directory"
	@echo "  check-build  - Check what frame files exist in build/ directory"
	@echo "  debug        - Clean and build with debug flags"
	@echo "  release      - Clean and build optimized"
	@echo "  clean        - Remove builds, frames, and output videos"
	@echo "  help         - Show this help message"

.PHONY: all run-demo run-test demo-only test-only check-frames check-build debug release clean help

test_lighting: tests/test_lighting_animation.c src/lighting.c src/animation.c src/math3d.c
	$(CC) $(CFLAGS) -Iinclude $^ -o build/test_lighting
